{/*conditional rendering is loading something on the screen if a condition is true*/}
{/*here, for demonstration purposes the conditional will be in a seperate file but it is supposed to be in the App component*/}
import React, {Component} from "react";
import Conditional from "./Conditional"

class App extends Component {
	constructor() {
		super() 
		this.state = {
			"isLoading": true
		};
	}

	componentDidMount() {
		setTimeout(() => {
			this.setState({
				"isLoading": false
			})
		}, 1500)
	}	

	render() {
		return (
			<div> 
				<Conditional isLoading={this.state.isLoading}/>
			</div>
		);
	}			{/*this will rerender/rerun because the state changes from true to false*/}
}

export default App;




>>>>>>>>>>Conditional.js<<<<<<<<<<<

import React from "react";

function Conditional(props) {
	console.log(props.isLoading)
	if (props.isLoading === true) {
		return (
			<h1> Loading...</h1>
		);
	} else {
		return (
			<h1> YEEEAAAAAHHHHHH!</h1>
		);
	}
	
}

export default Conditional;


{/* using a ternary operator
import React from "react";

function Conditional(props) {
	return (
		<div> 
			{props.isLoading ? <h1> Loading...</h1> : <h1> YEEEAAAAAHHHHHH!</h1>;}
		</div>
	);
}

export default Conditional;
*/}





>>>>>>>>>>>>>>>>>>>App.js<<<<<<<<<<<<<<<
{/*how we use the conditional in the App component*/}
import React, {Component} from "react";
import Componentos from "./Componentos";

class App extends Component {
	constructor() {
		super() 
		this.state = {
			"isLoading": true
		};
	}

	componentDidMount() {
		setTimeout(() => {
			this.setState({
				"isLoading": false
			})
		}, 1500)
	}	

	render() {
		return (
			<div> 
				{this.state.isLoading ? <h1> Loading... </h1> : <Conmponentos />}
			</div>
		);
	}			{/*this will rerender/rerun because the state changes from true to false*/}
}

export default App;


>>>>>>>>>>>>>>>Componentos.js<<<<<<<<<<<<<<<<<<<<

import React from "react";

function Componentos(props) {
	return (
		<div> 
			<h1> YEEEAAAAAHHHHHH!</h1>
		</div>
	);
}

export default Componentos;