import React, {Component} from "react";
import Conditional from "./Conditional";

class App extends Component {
	constructor() {	
		super() 
		this.state = {
			"unreadMessages": [
				"call your mother", 
				"seek counselling"
			]
		};
	}
	render() {
		return (
			<div> 
				{
					this.state.unreadMessages.length > 0 ?
					<h2> You have {this.state.unreadMessages.length} unread messages</h2> :
					null
				}			{/*using the ternary operator to give a conditional rendering where if there is no unreadMessages in the array then there will be no display*/}
			</div>
		);
	}
}

export default App;






>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>CONDITIONAL RENDERING PRACTICE<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

import React from "react";


Class App extends React.Component {
	constructor() {
		super();
		this.state = {
			"isLoggedIn": false
		}
		this.handleClick = this.handleClick.bind(this);
	}

	handleClick() {
		this.setState(prevState => {
			return {
				"isLoggedIn": !prevState.isLoggedIn 			{/*changing the previous state of isLoggedIn*/}
			};
		}) 				{/*passing a function instead of an object to the setState method because we need to know what the previous state of isLoggedIn*/}
	}
	render() {
		const buttonText = this.state.isLoggedIn ? "Log Out" : "Log In";
		let displayText = this.state.isLoggedIn ? "You are logged in" : "You are logged out";
		return (
			<div> 
				<button onClick={this.handleClick}> {buttonText} </button>
				<h3> {displayText} </h3>
			</div>
		);
	}	
}

export default App;